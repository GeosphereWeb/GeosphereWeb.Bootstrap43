prototype(GeosphereWeb.Bootstrap43:Content.Card) < prototype(Neos.Neos:ContentComponent) {
    //    prototype(Neos.Neos:ContentComponent -> Braucht KEIN Template
    //    prototype(Neos.Neos:Content -> Braucht EIN Template
    ///////////////////////////////////////
//    @context.isShownInFrontend = ${site.context.inBackend ? false : true}
    ///////

    //
    hasHeader = ${q(node).property('hasHeader')}
    hasSubtitle = ${q(node).property('hasSubtitle')}
    hasFooter = ${q(node).property('hasFooter')}
    image = ${q(node).property('image')}
    hasButton = ${q(node).property('hasButton')}

    contentItems = Neos.Neos:ContentCollection {
        nodePath = 'CardItems'
        attributes.class = 'card-text'
    }

    cardTitle = Neos.Neos:Editable {
        property = 'cardTitle'
    }
    cardTitle.@process.fontAwesome = ${site.context.inBackend ? value : String.pregReplace(value, "/(::\")(.*)(\"::)/U",  "<i class=\"$2\"></i>")}

//    cardText = Neos.Neos:Editable {
//        property = 'cardText'
//    }

    buttonText = Neos.Neos:Editable {
        property = 'buttonText'
    }

    subtitle = Neos.Neos:Editable {
        property = 'subtitle'
    }

    cardHeader = Neos.Neos:Editable {
        property = 'cardHeader'
    }
    cardFooter = Neos.Neos:Editable {
        property = 'cardFooter'
    }

    cardClass = Neos.Fusion:Join {
        stdClass = 'card '
        cardStyle = ${q(node).property('cardStyle') ? 'bg-' + q(node).property('cardStyle')+' ' : null }
        cardStyle.@if.isSelected = ${q(node).property('cardStyle')}

        textInWeiss = ${q(node).property('hasWhiteText') ? 'text-white'+' ' : null }
        textInWeiss.@if.isSelected = ${q(node).property('hasWhiteText')}

        cssClass = ${q(node).property('cssClass') ? q(node).property('cssClass')+' ' : null }
        cssClass.@if.isSelected = ${q(node).property('cssClass')}
        @glue = ' '
    }


    renderer = afx`
        <div class={props.cardClass}>
            <div @if.hatheader={props.hasHeader} class="card-header">{props.cardHeader}</div>
            <GeosphereWeb.Bootstrap43:Content.ResponsiveImage @if.hatheader={props.image} class='card-img-top'/>
            <div class="card-body">
                <h5 class="card-title ">{props.cardTitle}</h5>
                <h6 @if.untertitel={props.hasSubtitle} class="card-subtitle mb-2">{props.subtitle}</h6>
                {props.contentItems}
                <GeosphereWeb.Bootstrap43:Content.Button @if.untertitel={props.hasButton} buttonText={props.buttonText}/>
            </div>
            <div @if.hatfooter={props.hasFooter} class="card-footer text-muted">{props.cardFooter}</div>
        </div>
    `
}