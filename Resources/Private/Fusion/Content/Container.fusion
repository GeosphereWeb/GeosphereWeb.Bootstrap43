prototype(GeosphereWeb.Bootstrap43:Content.Container) < prototype(Neos.Neos:ContentComponent) {

    contentItems = Neos.Neos:ContentCollection {
        nodePath = 'contentItems'
        attributes.class = 'werner'
    }

    @context.backgroundSize = ${q(node).property('backgroundSize')}
    @context.backgroundColor = ${q(node).property('backgroundColor')}
    @context.backgroundPosition = ${q(node).property('backgroundPosition')}

    @context.bgrImage = Neos.Neos:ImageUri {
        asset = ${q(node).property('backgroundImage')}
        maximumWidth = '2000'
    }

    myClass = Neos.Fusion:Join {
        container = ${q(node).property('fluid') ? 'container-fluid' : 'container'}
        padding = ${q(node).property('padding') ? 'padding' : ''}
        textWhite = ${q(node).property('textWhite') ? 'text-white' : ''}
        @glue = ' '
    }

    myStyle = Neos.Fusion:Case {
        hasBackgroundImage {
            condition = ${bgrImage}
            renderer = Neos.Fusion:Join {
                bgrUrl = ${'background:url(' + bgrImage + ') no-repeat ' + backgroundColor + ' ' + backgroundPosition + '; '}
                webkits = ${'-webkit-background-size:' + backgroundSize + '; -moz-background-size:' + backgroundSize + '; -o-background-size:' + backgroundSize + '; background-size:' + backgroundSize + '; '}
                @glue = ' '
            }
        }

        hasBackgroundColor {
            condition = ${q(node).property('backgroundColor')}
            renderer = ${'background-color:' + backgroundColor + '; '}
        }

        fallback {
            condition = ${true}
            renderer = ''
        }
    }

    renderer = afx`
        <div data-image-src={bgrImage} style={props.myStyle} >
            <div class={props.myClass} >
                <div class={props.fluid ? 'row' : 'row ml-3 mr-3'}>
                    <div class="w-100">
                    {props.contentItems}</div>
                </div>
            </div>
        </div>
    `
}